# Generated by Django 5.2.3 on 2025-07-25 19:56

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CategoriaAtendimento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, unique=True, verbose_name='Nome da Categoria')),
                ('descricao', models.TextField(blank=True, null=True, verbose_name='Descrição')),
                ('ativa', models.BooleanField(default=True, verbose_name='Está ativa?')),
            ],
            options={
                'verbose_name': 'Categoria de Atendimento',
                'verbose_name_plural': 'Categorias de Atendimento',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='CategoriaContato',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, unique=True)),
                ('ativa', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='Conta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, unique=True, verbose_name='Nome da Conta/Gabinete')),
            ],
            options={
                'verbose_name': 'Conta',
                'verbose_name_plural': 'Contas',
            },
        ),
        migrations.CreateModel(
            name='Espaco',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, unique=True, verbose_name='Nome do Espaço')),
                ('capacidade', models.PositiveIntegerField(default=0, verbose_name='Capacidade de Pessoas')),
                ('descricao', models.TextField(blank=True, null=True, verbose_name='Descrição e Recursos (Ex: Possui projetor)')),
                ('ativo', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Espaço',
                'verbose_name_plural': 'Espaços',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='Atendimento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('protocolo', models.CharField(blank=True, editable=False, max_length=20, unique=True, verbose_name='Protocolo')),
                ('titulo', models.CharField(max_length=255, verbose_name='Título do Atendimento')),
                ('descricao', models.TextField(verbose_name='Descrição Detalhada')),
                ('status', models.CharField(choices=[('ABERTO', 'Aberto'), ('EM_ANALISE', 'Em Análise'), ('ENCAMINHADO', 'Encaminhado'), ('CONCLUIDO', 'Concluído'), ('ARQUIVADO', 'Arquivado')], default='ABERTO', max_length=20, verbose_name='Status')),
                ('data_criacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('data_atualizacao', models.DateTimeField(auto_now=True, verbose_name='Última Atualização')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='atendimentos_criados', to=settings.AUTH_USER_MODEL)),
                ('responsavel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='atendimentos_responsaveis', to=settings.AUTH_USER_MODEL, verbose_name='Responsável')),
                ('categorias', models.ManyToManyField(blank=True, related_name='atendimentos', to='atendimentos.categoriaatendimento', verbose_name='Categorias')),
                ('conta', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='atendimentos', to='atendimentos.conta', verbose_name='Conta/Gabinete')),
            ],
            options={
                'verbose_name': 'Atendimento',
                'verbose_name_plural': 'Atendimentos',
                'ordering': ['-data_criacao'],
            },
        ),
        migrations.CreateModel(
            name='Anexo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('arquivo', models.FileField(upload_to='anexos/%Y/%m/%d/', verbose_name='Arquivo')),
                ('descricao', models.CharField(blank=True, max_length=255, null=True, verbose_name='Descrição do Arquivo')),
                ('data_upload', models.DateTimeField(auto_now_add=True, verbose_name='Data de Upload')),
                ('usuario', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Enviado por')),
                ('atendimento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='anexos', to='atendimentos.atendimento', verbose_name='Atendimento')),
            ],
            options={
                'verbose_name': 'Anexo',
                'verbose_name_plural': 'Anexos',
                'ordering': ['-data_upload'],
            },
        ),
        migrations.CreateModel(
            name='GoogleApiToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('access_token', models.CharField(max_length=255)),
                ('refresh_token', models.CharField(max_length=255)),
                ('expires_at', models.DateTimeField()),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='google_token', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LogDeAtividade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('acao', models.CharField(choices=[('CRIACAO', 'Criação de Atendimento'), ('EDICAO', 'Edição de Atendimento'), ('DELECAO', 'Deleção de Atendimento'), ('TRAMITACAO', 'Nova Tramitação'), ('EDICAO_TRAMITACAO', 'Edição de Tramitação'), ('DELECAO_TRAMITACAO', 'Deleção de Tramitação')], max_length=20, verbose_name='Ação Realizada')),
                ('detalhes', models.TextField(verbose_name='Detalhes do Log')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Data e Hora')),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='contenttypes.contenttype')),
                ('usuario', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Log de Atividade',
                'verbose_name_plural': 'Logs de Atividades',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Municipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_completo', models.CharField(max_length=255, verbose_name='Nome Completo')),
                ('cpf', models.CharField(blank=True, default=None, max_length=14, null=True, unique=True, verbose_name='CPF')),
                ('data_nascimento', models.DateField(blank=True, null=True, verbose_name='Data de Nascimento')),
                ('email', models.EmailField(blank=True, max_length=255, null=True)),
                ('cargo', models.CharField(blank=True, max_length=150, null=True, verbose_name='Cargo')),
                ('orgao', models.CharField(blank=True, max_length=150, null=True, verbose_name='Órgão/Empresa')),
                ('telefones', models.JSONField(blank=True, default=list, null=True, verbose_name='Telefones')),
                ('endereco', models.JSONField(blank=True, default=dict, null=True, verbose_name='Endereço')),
                ('observacoes', models.TextField(blank=True, null=True, verbose_name='Observações')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True, verbose_name='Data de Cadastro')),
                ('data_atualizacao', models.DateTimeField(auto_now=True, verbose_name='Última Atualização')),
                ('matricula_rh', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='Matrícula RH')),
                ('ativo', models.BooleanField(default=True)),
                ('grupo_duplicado', models.UUIDField(blank=True, db_index=True, null=True, verbose_name='Grupo de Possíveis Duplicatas')),
                ('categoria', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='atendimentos.categoriacontato', verbose_name='Categoria do Contato')),
                ('contas', models.ManyToManyField(blank=True, related_name='municipes', to='atendimentos.conta', verbose_name='Contas com Acesso')),
            ],
            options={
                'verbose_name': 'Munícipe',
                'verbose_name_plural': 'Munícipes',
                'ordering': ['nome_completo'],
            },
        ),
        migrations.AddField(
            model_name='atendimento',
            name='municipe',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='atendimentos', to='atendimentos.municipe', verbose_name='Munícipe'),
        ),
        migrations.CreateModel(
            name='Notificacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mensagem', models.CharField(max_length=255)),
                ('link', models.CharField(blank=True, max_length=255, null=True)),
                ('lida', models.BooleanField(default=False)),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notificacoes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-data_criacao'],
            },
        ),
        migrations.CreateModel(
            name='PerfilUsuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contas', models.ManyToManyField(blank=True, to='atendimentos.conta')),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='perfil', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RegistroVisita',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_checkin', models.DateTimeField(auto_now_add=True, verbose_name='Data do Check-in')),
                ('observacao', models.TextField(blank=True, null=True, verbose_name='Observação')),
                ('conta_destino', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='atendimentos.conta', verbose_name='Gabinete de Destino')),
                ('municipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='visitas', to='atendimentos.municipe')),
                ('registrado_por', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='visitas_registradas', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Registro de Visita',
                'verbose_name_plural': 'Registros de Visita',
                'ordering': ['-data_checkin'],
            },
        ),
        migrations.CreateModel(
            name='SolicitacaoAgenda',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assunto', models.CharField(max_length=255, verbose_name='Assunto da Reunião')),
                ('detalhes', models.TextField(blank=True, null=True, verbose_name='Detalhes Adicionais')),
                ('status', models.CharField(choices=[('SOLICITADO', 'Solicitado'), ('EM_ANALISE', 'Em Análise'), ('AGENDADO', 'Agendado'), ('NEGADO', 'Negado'), ('CANCELADO', 'Cancelado')], default='SOLICITADO', max_length=20, verbose_name='Status')),
                ('data_sugerida', models.DateTimeField(blank=True, null=True, verbose_name='Data Sugerida pelo Solicitante')),
                ('data_agendada', models.DateTimeField(blank=True, null=True, verbose_name='Data e Hora de Início')),
                ('data_agendada_fim', models.DateTimeField(blank=True, null=True, verbose_name='Data e Hora de Término')),
                ('link_google_agenda', models.URLField(blank=True, max_length=1024, null=True, verbose_name='Link do Evento no Google Agenda')),
                ('motivo_negacao', models.TextField(blank=True, null=True, verbose_name='Motivo da Negação/Cancelamento')),
                ('data_criacao', models.DateTimeField(auto_now_add=True, verbose_name='Data da Solicitação')),
                ('data_atualizacao', models.DateTimeField(auto_now=True, verbose_name='Última Atualização')),
                ('conta', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='atendimentos.conta', verbose_name='Conta/Gabinete Solicitado')),
                ('espaco', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='agendas', to='atendimentos.espaco', verbose_name='Espaço Reservado')),
                ('responsavel_analise', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Responsável pela Análise')),
                ('solicitante', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='solicitacoes_agenda', to='atendimentos.municipe', verbose_name='Solicitante')),
            ],
            options={
                'verbose_name': 'Solicitação de Agenda',
                'verbose_name_plural': 'Solicitações de Agenda',
                'ordering': ['-data_criacao'],
            },
        ),
        migrations.CreateModel(
            name='Tramitacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('despacho', models.TextField(verbose_name='Despacho / Nota de Progresso')),
                ('data_tramitacao', models.DateTimeField(auto_now_add=True, verbose_name='Data')),
                ('atendimento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tramitacoes', to='atendimentos.atendimento', verbose_name='Atendimento')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Usuário Responsável')),
            ],
            options={
                'verbose_name': 'Tramitação',
                'verbose_name_plural': 'Tramitações',
                'ordering': ['-data_tramitacao'],
            },
        ),
    ]
